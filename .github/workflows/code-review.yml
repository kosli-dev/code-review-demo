name: Code Review

on:
  workflow_call:
    inputs:
      kosli-org:
        description: 'Kosli organization name'
        required: true
        type: string
      kosli-build-flow:
        description: 'Kosli build flow name *where the PR attestations are made*'
        required: true
        type: string

      kosli-release-flow:
        description: 'Kosli release flow name *where the attestation will be made*'
        required: true
        type: string
      kosli-trail:
        description: 'Kosli trail SHA to use'
        required: true
        type: string
      base-tag:
        description: 'Base tag to compare against (default: 1.0.0)'
        required: false
        type: string
        default: '1.0.0'
    secrets:
      kosli-api-token:
        description: 'Kosli API token'
        required: true

jobs:
  code-review:
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
      contents: write
    env:
      OUTPUT_FILE: output.json

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Kosli cli
        uses: kosli-dev/setup-cli-action@v2
        with:
          version: ${{ vars.KOSLI_CLI_VERSION }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Get commit list between HEAD and base tag
        id: get-commits
        run: |
          # Check if the base tag exists
          if git rev-parse --verify ${{ inputs.base-tag }} >/dev/null 2>&1; then
            # Tag exists, get all commit SHAs between HEAD and base tag (excluding the tag commit)
            COMMIT_LIST=$(git log --format="%H" ${{ inputs.base-tag }}..HEAD)
            echo "Using commits between HEAD and ${{ inputs.base-tag }} tag"
          else
            # Tag doesn't exist, use only HEAD commit
            COMMIT_LIST=$(git rev-parse HEAD)
            echo "Tag ${{ inputs.base-tag }} not found, using only HEAD commit"
          fi
          # Convert to space-separated list for the Python script
          COMMIT_LIST_SPACED=$(echo "$COMMIT_LIST" | tr '\n' ' ')
          echo "commit_list=$COMMIT_LIST_SPACED" >> $GITHUB_OUTPUT
          echo "Found commits: $COMMIT_LIST_SPACED"

      - name: Run code review evaluation
        run: python3 "bin/code-review-evaluation.py" 
          --host "https://app.kosli.com" 
          --org "${{ inputs.kosli-org }}" 
          --flow "${{ inputs.kosli-build-flow }}" 
          --commit-list ${{ steps.get-commits.outputs.commit_list }} 
          --attestation-type "pull_request" 
          --api-token "${{ secrets.kosli-api-token }}" 
          --output-file "${{ env.OUTPUT_FILE }}" 

      - name: attest code review evidence to Kosli
        run: kosli attest custom 
          --type code-review
          --name code-review
          --attestation-data "${{ env.OUTPUT_FILE }}"
          --flow ${{ inputs.kosli-release-flow }}
          --trail ${{ inputs.kosli-trail }}
          --api-token "${{ secrets.kosli-api-token }}"
          --org ${{ inputs.kosli-org }}